// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  CompanyId Int
  company   Company  @relation(fields: [CompanyId], references: [id])

  @@index([email])
}

model Company {
  id          Int        @id @default(autoincrement())
  companyName String
  expiration  DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  users       User[]
  endpoints   Endpoint[]
  processes   Process[]
  tasks       Task[]
}

enum Status {
  Completed
  Preprocessing
  Mining
}

model Endpoint {
  id          Int     @id @default(autoincrement())
  endpointUrl String
  description String
  status      Status
  apiKey      String
  CompanyId   Int
  company     Company @relation(fields: [CompanyId], references: [id])
}

model Process {
  id          Int        @id @default(autoincrement())
  processName String
  description String
  lastUpdate  DateTime
  fitness     Int
  CompanyId   Int
  company     Company    @relation(fields: [CompanyId], references: [id])
  states      State[]
  events      Event[]
  dataLinks   DataLink[]
}

model State {
  id             Int     @id @default(autoincrement())
  key            String
  eventName      String
  isTextEditable Boolean
  color          String
  shape          String  @default("Ellipse")
  ProcessId      Int
  process        Process @relation(fields: [ProcessId], references: [id])
}

model Event {
  id             Int     @id @default(autoincrement())
  key            String
  frequency      Int
  benchmarkTime  Int
  isTextEditable Boolean
  color          String
  shape          String  @default("Rounded Rectangle")
  ProcessId      Int
  process        Process @relation(fields: [ProcessId], references: [id])
}

model DataLink {
  id            Int     @id @default(autoincrement())
  canRelinkFrom Boolean
  from          String
  to            String
  text          String
  ProcessId     Int
  process       Process @relation(fields: [ProcessId], references: [id])
}

model Task {
  id          Int     @id @default(autoincrement())
  processName String
  department  String
  caseId      String
  name        String
  eventName   String
  time        Int
  CompanyId   Int
  company     Company @relation(fields: [CompanyId], references: [id])
}
